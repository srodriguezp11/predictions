import { Injectable } from '@nestjs/common';
import { LlmService } from './llm/llm.service';
import { DiscordService } from './discord/discord.service';
import { FootballDataService } from './football-data/football-data.service';
@Injectable()
export class AppService {
  constructor(
    private readonly discordService: DiscordService,
    private readonly llmService: LlmService,
    private readonly footballDataService: FootballDataService,
  ) {}

  getHello(): string {
    return 'Premier League Predictor!';
  }

  async generateMatchdayPrediction(): Promise<any> {
    const summary = await this.footballDataService.getMatchSummaryForLLM('PL');
    const prompt = `Genera una predicci√≥n para los proximos partidos de la liga inglesa. Debes incluir quien sera el vencedor de cada uno de los encuentros, la cantidad de goles y la probabilidad de acertar el pronostico.
    ${summary}
    `;
    return this.llmService.generateText(prompt);
  }

  async sendPredictionToDiscord(): Promise<any> {
    const initialMessage = [
      '¬°Que tal Muchachos! Rom√°n les habla, el √∫nico 10, el m√°s grande.',
      'Se viene la Premier League con todo.',
      '¬°Y s√≠, no se preocupen! En breve les mando los resultados de la pr√≥xima fecha.',
      'Nada de nervios, yo me encargar√© de que est√©n bien informados,',
      'porque al igual que en la cancha, no dejamos nada al azar.',
      '¬°Nos vemos pronto, cu√≠dense!',
      'Y a disfrutar del f√∫tbol, que como siempre, hay magia en cada pase. üî•‚öΩ',
    ].join('\n');
    await this.discordService.sendMessage(initialMessage);

    const prediction = await this.generateMatchdayPrediction();

    const MAX_LENGTH = 500;
    if (prediction.length <= MAX_LENGTH) {
      return this.discordService.sendMessage(prediction);
    }

    const parts = prediction.match(new RegExp(`.{1,${MAX_LENGTH}}`, 'g')) || [];

    for (const part of parts) await this.discordService.sendMessage(part);

    return { message: 'Prediction sent to Discord' };
  }
}
